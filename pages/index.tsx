import { css } from '@emotion/react';
import Head from 'next/head';
import Image from 'next/image';
import { useEffect, useRef, useState } from 'react';
import styles from '../styles/Home.module.css';

// const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [products, setProducts] = useState<any[]>([]);
  const inputRef = useRef<HTMLInputElement>(null);

  // useEffect(() => {
  //   fetch('/api/get-item')
  //     .then((response) => response.json())
  //     .then((data) => {
  //       setProducts(data.items);
  //     });
  // }, []);

  // useEffect(() => {
  //   fetch('/api/get-products')
  //     .then((response) => response.json())
  //     .then((data) => {
  //       setProducts(data.items);
  //     });
  // }, []);

  const handleClick = () => {
    if (inputRef.current == null || !inputRef.current.value) {
      alert('name을 넣어주세요.');
      return;
    }

    fetch(`/api/add-item?name=${inputRef.current.value}`)
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        alert(data.message);
      });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <input
            className="placeholder:italic placeholder:text-slate-400 block bg-white w-full border border-slate-300 rounded-md py-2 pl-3 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm"
            ref={inputRef}
            placeholder="Input Item"
            type="text"
            name="search"
          />
          <button
            css={css`
              padding: 15px;
              background-color: lightblue;
            `}
            onClick={handleClick}
          >
            Add item
          </button>
        </div>

        <div>
          <h2>Products List</h2>
          {products &&
            products.map((item) => (
              <div key={item.id}>
                {item.name}
                <span>{item.createdAt}</span>
              </div>
            ))}
          {/* {products &&
            products.map(({ properties, id, created_time }) => {
              return (
                <div key={id}>
                  {properties?.product_name?.title[0]?.text?.content || ''}
                  {' ['}
                  {created_time}
                  {'] '}
                  <br />
                  <br />
                </div>
              );
            })} */}
        </div>
      </main>
    </>
  );
}
